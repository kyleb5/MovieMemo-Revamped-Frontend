{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCR5InrjsUltmtqZTrS-E6K_xAO7GSKtsc\",\n  authDomain: \"moviememo-revamped.firebaseapp.com\",\n  projectId: \"moviememo-revamped\",\n  storageBucket: \"moviememo-revamped.firebasestorage.app\",\n  messagingSenderId: \"267919572843\",\n  appId: \"1:267919572843:web:f16eead8d0d092c93cd62e\",\n  measurementId: \"G-85E03VV785\"\n};\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\nexport { app, auth, provider };"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,gLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,gLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,gLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,WAAW,IAAI,wNAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/app/page.tsx"],"sourcesContent":["\"use client\"; // Next.js directive for client-side rendering\n\nimport { auth, provider } from \"../firebase\"; // Import Firebase config\nimport {\n  signInWithPopup,\n  User,\n  signOut,\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n} from \"firebase/auth\"; // Import Firebase Auth methods\nimport { useState, useEffect } from \"react\"; // React hooks\n\nexport default function Home() {\n  // State for the current user (null if not logged in)\n  const [user, setUser] = useState<User | null>(null);\n\n  // States for sign up form\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupError, setSignupError] = useState(\"\");\n  const [signupSuccess, setSignupSuccess] = useState(\"\");\n\n  // States for login form\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n\n  // States for password reset form\n  const [resetEmail, setResetEmail] = useState(\"\");\n  const [resetMessage, setResetMessage] = useState(\"\");\n  const [resetError, setResetError] = useState(\"\");\n\n  // Listen for authentication state changes (login/logout)\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\n      setUser(firebaseUser); // Update user state when auth state changes\n    });\n    return () => unsubscribe(); // Cleanup listener on unmount\n  }, []);\n\n  // Handle Google sign-in\n  const handleGoogleSignIn = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider); // Open Google sign-in popup\n      setUser(result.user); // Set user state to the signed-in user\n    } catch (error) {\n      alert(\"Sign in failed\"); // Show error if sign-in fails\n    }\n  };\n\n  // Handle sign out\n  const handleSignOut = async () => {\n    try {\n      await signOut(auth); // Sign out the user\n      setUser(null); // Clear user state\n    } catch (error) {\n      alert(\"Sign out failed\"); // Show error if sign-out fails\n    }\n  };\n\n  // Handle email/password sign up\n  const handleSignup = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    setSignupError(\"\"); // Clear previous errors\n    setSignupSuccess(\"\"); // Clear previous success message\n    try {\n      // Create user with email and password\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        signupEmail,\n        signupPassword\n      );\n      // Send email verification to the new user\n      await sendEmailVerification(userCredential.user);\n      setSignupSuccess(\"Account created! Please check your email to verify your account.\"); // Show success message\n      setSignupEmail(\"\"); // Clear email input\n      setSignupPassword(\"\"); // Clear password input\n    } catch (error) {\n      setSignupError(error.message); // Show error message\n    }\n  };\n\n  // Handle email/password login\n  const handleLogin = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    setLoginError(\"\"); // Clear previous errors\n    try {\n      // Sign in with email and password\n      await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n      setLoginEmail(\"\"); // Clear email input\n      setLoginPassword(\"\"); // Clear password input\n    } catch (error) {\n      setLoginError(error.message); // Show error message\n    }\n  };\n\n  // Handle password reset\n  const handleResetPassword = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    setResetMessage(\"\"); // Clear previous messages\n    setResetError(\"\"); // Clear previous errors\n    try {\n      // Send password reset email\n      await sendPasswordResetEmail(auth, resetEmail);\n      setResetMessage(\"Password reset email sent! Please check your inbox.\"); // Show success message\n      setResetEmail(\"\"); // Clear email input\n    } catch (error) {\n      setResetError(error.message); // Show error message\n    }\n  };\n\n  console.warn(user); // Log user state for debugging\n\n  return (\n    // Main container with grid layout and padding\n    <div className=\"font-sans grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20\">\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start\">\n        {/* If user is not logged in, show auth forms */}\n        {!user ? (\n          <div className=\"flex flex-col gap-8 items-center\">\n            {/* Google Sign In Button */}\n            <button\n              onClick={handleGoogleSignIn}\n              className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n            >\n              Sign in with Google\n            </button>\n\n            {/* Email/Password Sign Up Form */}\n            <form onSubmit={handleSignup} className=\"flex flex-col gap-2 w-72\">\n              <h2 className=\"font-bold text-lg\">Sign Up</h2>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={signupEmail}\n                onChange={(e) => setSignupEmail(e.target.value)}\n                required\n                className=\"border px-2 py-1 rounded\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={signupPassword}\n                onChange={(e) => setSignupPassword(e.target.value)}\n                required\n                className=\"border px-2 py-1 rounded\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-green-600 text-white px-4 py-2 rounded mt-2\"\n              >\n                Create Account\n              </button>\n              {/* Show sign up error or success messages */}\n              {signupError && <p className=\"text-red-500\">{signupError}</p>}\n              {signupSuccess && <p className=\"text-green-600\">{signupSuccess}</p>}\n            </form>\n\n            {/* Email/Password Login Form */}\n            <form onSubmit={handleLogin} className=\"flex flex-col gap-2 w-72\">\n              <h2 className=\"font-bold text-lg\">Login</h2>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={loginEmail}\n                onChange={(e) => setLoginEmail(e.target.value)}\n                required\n                className=\"border px-2 py-1 rounded\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={loginPassword}\n                onChange={(e) => setLoginPassword(e.target.value)}\n                required\n                className=\"border px-2 py-1 rounded\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-blue-600 text-white px-4 py-2 rounded mt-2\"\n              >\n                Login\n              </button>\n              {/* Show login error message */}\n              {loginError && <p className=\"text-red-500\">{loginError}</p>}\n            </form>\n\n            {/* Password Reset Form */}\n            <form onSubmit={handleResetPassword} className=\"flex flex-col gap-2 w-72\">\n              <h2 className=\"font-bold text-lg\">Reset Password</h2>\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={resetEmail}\n                onChange={(e) => setResetEmail(e.target.value)}\n                required\n                className=\"border px-2 py-1 rounded\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-yellow-600 text-white px-4 py-2 rounded mt-2\"\n              >\n                Send Reset Email\n              </button>\n              {/* Show reset error or success messages */}\n              {resetError && <p className=\"text-red-500\">{resetError}</p>}\n              {resetMessage && <p className=\"text-green-600\">{resetMessage}</p>}\n            </form>\n          </div>\n        ) : (\n          // If user is logged in, show welcome and sign out\n          <div className=\"flex flex-col items-center gap-4\">\n            <p>Welcome, {user.displayName || user.email}</p>\n            {/* Show user profile photo if available */}\n            {user.photoURL && (\n              <img src={user.photoURL} alt=\"Profile\" className=\"w-16 h-16 rounded-full\" />\n            )}\n            {/* Show email verification warning if not verified */}\n            {!user.emailVerified && (\n              <p className=\"text-yellow-600\">\n                Please verify your email to unlock all features.\n              </p>\n            )}\n            {/* Sign out button */}\n            <button\n              onClick={handleSignOut}\n              className=\"bg-red-500 text-white px-4 py-2 rounded\"\n            >\n              Sign Out\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}