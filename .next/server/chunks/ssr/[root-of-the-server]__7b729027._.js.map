{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCR5InrjsUltmtqZTrS-E6K_xAO7GSKtsc\",\n  authDomain: \"moviememo-revamped.firebaseapp.com\",\n  projectId: \"moviememo-revamped\",\n  storageBucket: \"moviememo-revamped.firebasestorage.app\",\n  messagingSenderId: \"267919572843\",\n  appId: \"1:267919572843:web:f16eead8d0d092c93cd62e\",\n  measurementId: \"G-85E03VV785\"\n};\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\nexport { app, auth, provider };"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,8HAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,WAAW,IAAI,gIAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { auth, provider } from \"../firebase\";\nimport {\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  User,\n} from \"firebase/auth\";\n\n// Custom React hook to manage Firebase authentication\nexport function useAuth() {\n  // State to hold the current authenticated user (null if not logged in)\n  const [user, setUser] = useState<User | null>(null);\n  // State to indicate if the auth state is still loading (useful for SSR or initial load)\n  const [loading, setLoading] = useState(true);\n\n  // Effect to subscribe to Firebase auth state changes (login/logout)\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\n      setUser(firebaseUser); // Set the user (or null if logged out)\n      setLoading(false);     // Set loading to false once we know the state\n    });\n    // Cleanup the listener on unmount\n    return unsubscribe;\n  }, []);\n\n  // Sign in with Google popup\n  const signInWithGoogle = () => signInWithPopup(auth, provider);\n\n  // Sign out the current user\n  const signOutUser = () => signOut(auth);\n\n  // Create a new user with email and password\n  const signUp = (email: string, password: string) =>\n    createUserWithEmailAndPassword(auth, email, password);\n\n  // Send a verification email to the current user\n  const sendVerification = (user: User) => sendEmailVerification(user);\n\n  // Sign in with email and password\n  const signIn = (email: string, password: string) =>\n    signInWithEmailAndPassword(auth, email, password);\n\n  // Send a password reset email to the given email address\n  const sendPasswordReset = (email: string) =>\n    sendPasswordResetEmail(auth, email);\n\n  // Return all state and auth actions for use in components\n  return {\n    user,                // The current user object (or null)\n    loading,             // Whether the auth state is still loading\n    signInWithGoogle,    // Function to sign in with Google\n    signOutUser,         // Function to sign out\n    signUp,              // Function to sign up with email/password\n    sendVerification,    // Function to send email verification\n    signIn,              // Function to sign in with email/password\n    sendPasswordReset,   // Function to send password reset\n  };\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;AAYO,SAAS;IACd,uEAAuE;IACvE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,wFAAwF;IACxF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,oEAAoE;IACpE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,6CAA6C;QAC7C,MAAM,cAAc,CAAA,GAAA,gIAAA,CAAA,qBAAkB,AAAD,EAAE,iGAAA,CAAA,OAAI,EAAE,CAAC;YAC5C,QAAQ,eAAe,uCAAuC;YAC9D,WAAW,QAAY,8CAA8C;QACvE;QACA,kCAAkC;QAClC,OAAO;IACT,GAAG,EAAE;IAEL,4BAA4B;IAC5B,MAAM,mBAAmB,IAAM,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,iGAAA,CAAA,OAAI,EAAE,iGAAA,CAAA,WAAQ;IAE7D,4BAA4B;IAC5B,MAAM,cAAc,IAAM,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE,iGAAA,CAAA,OAAI;IAEtC,4CAA4C;IAC5C,MAAM,SAAS,CAAC,OAAe,WAC7B,CAAA,GAAA,gIAAA,CAAA,iCAA8B,AAAD,EAAE,iGAAA,CAAA,OAAI,EAAE,OAAO;IAE9C,gDAAgD;IAChD,MAAM,mBAAmB,CAAC,OAAe,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD,EAAE;IAE/D,kCAAkC;IAClC,MAAM,SAAS,CAAC,OAAe,WAC7B,CAAA,GAAA,gIAAA,CAAA,6BAA0B,AAAD,EAAE,iGAAA,CAAA,OAAI,EAAE,OAAO;IAE1C,yDAAyD;IACzD,MAAM,oBAAoB,CAAC,QACzB,CAAA,GAAA,gIAAA,CAAA,yBAAsB,AAAD,EAAE,iGAAA,CAAA,OAAI,EAAE;IAE/B,0DAA0D;IAC1D,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/components/Auth/LoginForm.tsx"],"sourcesContent":["import { useAuth } from \"../../hooks/useAuth\";\nimport { useState } from \"react\";\n\nexport default function LoginForm() {\n  const { signIn } = useAuth();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      await signIn(email, password);\n      setEmail(\"\");\n      setPassword(\"\");\n    } catch (err: any) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin} className=\"flex flex-col gap-2 w-72\">\n      <h2 className=\"font-bold text-lg\">Login</h2>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        required\n        className=\"border px-2 py-1 rounded\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        required\n        className=\"border px-2 py-1 rounded\"\n      />\n      <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded mt-2\">\n        Login\n      </button>\n      {error && <p className=\"text-red-500\">{error}</p>}\n    </form>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,yGAAA,CAAA,UAAO,AAAD;IACzB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,SAAS;QACT,IAAI;YACF,MAAM,OAAO,OAAO;YACpB,SAAS;YACT,YAAY;QACd,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,qBACE,qKAAC;QAAK,UAAU;QAAa,WAAU;;0BACrC,qKAAC;gBAAG,WAAU;0BAAoB;;;;;;0BAClC,qKAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gBACtC,QAAQ;gBACR,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,QAAQ;gBACR,WAAU;;;;;;0BAEZ,qKAAC;gBAAO,MAAK;gBAAS,WAAU;0BAAgD;;;;;;YAG/E,uBAAS,qKAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;;AAG7C","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Backup1/Code/Test/MovieMemo-Revamped/pages/login.tsx"],"sourcesContent":["import LoginForm from \"../components/Auth/LoginForm\";\n\nexport default function Login() {\n  return (\n    <div className=\"flex justify-center items-center min-h-screen\">\n      <LoginForm />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;;;;;AAEe,SAAS;IACtB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC,yHAAA,CAAA,UAAS;;;;;;;;;;AAGhB","debugId":null}}]
}